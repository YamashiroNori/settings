{

  "parser" : "babel-eslint",

  "env": {
    "browser"    : true,  // browser global variables.
    "node"       : true,  // Node.js global variables and Node.js-specific rules.
    "amd"        : true,  // defines require() and define() as global variables as per the amd spec.
    "mocha"      : true,  // adds all of the Mocha testing global variables.
    "jasmine"    : false, // adds all of the Jasmine testing global variables for version 1.3 and 2.0.
    "phantomjs"  : false, // phantomjs global variables.
    "jquery"     : false, // jquery global variables.
    "prototypejs": false, // prototypejs global variables.
    "shelljs"    : false  // shelljs global variables.
  },

  "globals" : {
    "_" : true,
    "enchant" : true,
  },

  "rules" : {

/* ============================================================
 * [Strict Mode]
 * These rules relate to using strict mode.
 */

    "strict" : [2,"global"],

/* ============================================================
 * [Legacy]
 * The following rules are included for compatibility with JSHint and JSLint.
 */
 
    "max-depth"     : [1, 4],
    "max-len"       : [1,99],
    "max-params"    : [1, 4],
    "max-statements": [1,30],
    "no-bitwise"    : 0,        // allow x = x | 0;
    "no-plusplus"   : 0,        // allow ++

/* ============================================================
 * [Variables]
 * These rules have to do with variable declarations.
 */

    "init-declarations"         : 0, // 1,
    "no-catch-shadow"           : 0, // do not need to support IE 8 and earlier
    "no-delete-var"             : 2,
    "no-label-var"              : 2,
    "no-shadow-restricted-names": 1,
    "no-shadow"                 : 0, // [2, { "hoist": "functions" }],
    "no-undef-init"             : 2,
    "no-undef"                  : 2,
    "no-undefined"              : 2,
    "no-unused-vars"            : 1,
    "no-use-before-define"      : 0,


/* ============================================================
 * [Stylistic Issues]
 * These rules are purely matters of style and are quite subjective.
 */ 

    "array-bracket-spacing"      : 1,
    "block-spacing"              : 1,
    "brace-style"                : 0,   // Allow Any brace-style
    "camelcase"                  : [1, {"properties": "always"}],
    "comma-spacing"              : 1,
    "comma-style"                : 0, // [1, "first"],
    "computed-property-spacing"  : 0,
    "consistent-this"            : [1,"self"],
    "eol-last"                   : 0,   // Allow EOL at last
    "func-names"                 : 0,   // Allow function() {}
    "func-style"                 : 0,   // Allow function that declaration and expression style
    "id-length"                  : [1, {"min": 1, "max": 18, "properties": "never", "exceptions" : ["x"]}],   // Allow short name
    "id-match"                   : 0,
    "indent"                     : [1, 2, {"SwitchCase": 1}],
    "jsx-quotes"                 : 0,
    "key-spacing"                : 0, //[1, {"beforeColon": false, "afterColon": true}],
    "keyword-spacing"            : 1,
    "linebreak-style"            : [2, "unix"],
    "lines-around-comment"       : 1,
    "max-nested-callbacks"       : [2, 4],
    "new-cap"                    : 2,
    "new-parens"                 : 2,
    "newline-after-var"          : [1, "always"],
    "no-array-constructor"       : 1,
    "no-continue"                : 1,
    "no-inline-comments"         : 0,
    "no-lonely-if"               : 1,
    "no-mixed-spaces-and-tabs"   : 1,
    "no-multiple-empty-lines"    : [1, {max: 4}],
    "no-negated-condition"       : 1,
    "no-nested-ternary"          : 2,
    "no-new-object"              : 2,
    "no-restricted-syntax"       : [2, "WithStatement"],
    "no-spaced-func"             : 1,
    "no-ternary"                 : 0,
    "no-trailing-spaces"         : 1,
    "no-underscore-dangle"       : 1,
    "no-unneeded-ternary"        : 2,
    "object-curly-spacing"       : [2, "never"],
    "one-var"                    : 0,
    "operator-assignment"        : 0, //[1, "never"],
    "operator-linebreak"         : [1, "before"],
    "padded-blocks"              : 0,
    "quote-props"                : [1, "as-needed"],
    "quotes"                     : [1, "single", "avoid-escape"],
    "require-jsdoc"              : 0,
    "semi-spacing"               : 1,
    "semi"                       : [2, "always"],
    "sort-vars"                  : 0,
    "space-before-blocks"        : 1,
    "space-before-function-paren": [1, "never"],
    "space-before-keywords"      : [1, "always"],
    "space-in-parens"            : [1, "never"],
    "space-infix-ops"            : 1,
    "space-return-throw-case"    : 2,
    "space-unary-ops"            : 2,
    "spaced-comment"             : [1, "always", { "exceptions": ["-", "="] }],
    "wrap-regex"                 : 2,


/* ============================================================
 * [Possible Errors]
 * The following rules point out areas where you might have made mistakes.
 */ 

    "comma-dangle"            : [2, "never"],
    "no-cond-assign"          : [2, "always"],
    "no-console"              : 0,
    "no-constant-condition"   : 2,
    "no-control-regex"        : 2,
    "no-debugger"             : 0,
    "no-dupe-args"            : 2,
    "no-dupe-keys"            : 2,
    "no-duplicate-case"       : 2,
    "no-empty-character-class": 2,
    "no-empty"                : 1,
    "no-ex-assign"            : 2,
    "no-extra-boolean-cast"   : 2,
    "no-extra-parens"         : 0, //1,
    "no-extra-semi"           : 2,
    "no-func-assign"          : 2,
    "no-inner-declarations"   : 0,
    "no-invalid-regexp"       : 2,
    "no-irregular-whitespace" : 2,
    "no-negated-in-lhs"       : 2,
    "no-obj-calls"            : 2,
    "no-regex-spaces"         : 2,
    "no-sparse-arrays"        : 2,
    "no-unexpected-multiline" : 2,
    "no-unreachable"          : 2,
    "use-isnan"               : 2,
    "valid-jsdoc"             : 1,
    "valid-typeof"            : 2,

/* ============================================================
 * [Best Practices]
 * These are rules designed to prevent you from making mistakes.
 */

    "accessor-pairs"       : 2,
    "block-scoped-var"     : 2,
    "complexity"           : [1, 5],
    "consistent-return"    : 2,
    "curly"                : [1, "all"],
    "default-case"         : 2,
    "dot-location"         : [2, "property"],
    "dot-notation"         : 2,
    "eqeqeq"               : 2,
    "guard-for-in"         : 1,
    "no-alert"             : 1,
    "no-caller"            : 2,
    "no-div-regex"         : 2,
    "no-else-return"       : 1,
    "no-empty-label"       : 2,
    "no-empty-pattern"     : 0,
    "no-eq-null"           : 2,
    "no-eval"              : 2,
    "no-extend-native"     : 2,
    "no-extra-bind"        : 2,
    "no-fallthrough"       : 1,
    "no-floating-decimal"  : 1,
    "no-implicit-coercion" : 2,
    "no-implied-eval"      : 2,
    "no-invalid-this"      : 1,
    "no-iterator"          : 2,
    "no-labels"            : 2,
    "no-lone-blocks"       : 2,
    "no-loop-func"         : 2,
    "no-magic-numbers"     : 0,
    "no-multi-spaces"      : 0, // 1,
    "no-multi-str"         : 2,
    "no-native-reassign"   : 2,
    "no-new-func"          : 1,
    "no-new-wrappers"      : 1,
    "no-new"               : 1,
    "no-octal-escape"      : 2,
    "no-octal"             : 2,
    "no-param-reassign"    : [2, { "props": false }],
    "no-process-env"       : 2,
    "no-proto"             : 2,
    "no-redeclare"         : 2,
    "no-return-assign"     : 2,
    "no-script-url"        : 2,
    "no-self-compare"      : 2,
    "no-sequences"         : 2,
    "no-throw-literal"     : 1,
    "no-unused-expressions": 1,
    "no-useless-call"      : 2,
    "no-useless-concat"    : 2,
    "no-void"              : 2,
    "no-warning-comments"  : 0,
    "no-with"              : 2,
    "radix"                : 2,
    "vars-on-top"          : 0, // 1,
    "wrap-iife"            : 0,
    "yoda"                 : 1,


// [Node.js and CommonJS]
// [ECMAScript 6]
// [Removed]

  }
}
